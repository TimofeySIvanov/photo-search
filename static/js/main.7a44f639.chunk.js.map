{"version":3,"sources":["components/Form.js","components/NotFound.js","components/Photo.js","components/App.js","components/config.js","index.js"],"names":["Form","state","searchRequest","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","searching_word","path","history","push","currentTarget","reset","className","onSubmit","this","type","name","placeholder","ref","input","onChange","src","alt","Component","withRouter","NotFound","Photo","photos","otvet","data","length","map","photo","key","id","farm","server","secret","title","searchForm","App","SearchPhotos","loading","axios","get","then","response","undefined","tag","catch","error","console","log","Puppies","Kittens","Stars","basename","to","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a44f639.chunk.js","sourcesContent":["// Importing components\nimport React, { Component } from 'react';\nimport {withRouter } from 'react-router-dom';\n\n\nclass Form extends Component {\n    // Clearing text of search\n    state = {\n        searchRequest: ''\n    }\n\n    onSearchChange = e => {\n        this.setState({ searchRequest: e.target.value });\n    }\n    //On submiting request this is what happens\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSearch(this.query.value);\n        let searching_word = this.query.value;\n        let path = `/search/${searching_word}`;\n        this.props.history.push(path);\n        e.currentTarget.reset();\n    }\n    //rendering form\n    render() {\n        return (\n            <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                <input type=\"search\"\n                    name=\"Search_photos\"\n                    placeholder=\"Search photos\"\n                    ref={input => this.query = input}\n                    onChange={this.onSearchChange}\n                />\n                <button type=\"submit\" className=\"search-button\">\n                <img src=\"https://img.icons8.com/android/24/000000/search.png\" alt=\"search icon\"/>\n                </button>\n            </form>\n        );\n    }\n\n}\n\nexport default withRouter(Form);\n","//Importing modules\nimport React from \"react\";\n//Creating constant NotFound that will be displayed when search is null\nconst NotFound = () => (\n    <li className=\"not-found\">\n        <h3>No Pictures Found</h3>\n    </li>\n)\nexport default NotFound;","// Importing modules\nimport React from 'react';\nimport NotFound from './NotFound';\n\n//Creating Photo component that will display photos\nconst Photo = props => {\n  const otvet = props.data;\n  let photos;\n  if (otvet.length > 0) {\n    photos = otvet.map(photo =>\n        <li key={photo.id}>\n        <img src={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_m.jpg`} alt={photo.title}/>\n         </li>);\n  } else {\n    photos = <NotFound />\n  }\n  return (\n    <div className=\"photo-container\">\n      <h2>{props.searchForm}</h2>\n      <ul>\n        {photos}\n      </ul>\n    </div>\n\n  );\n}\nexport default Photo;","// Let's import modules from react and other components\nimport { NavLink, HashRouter, Route, Switch } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from './Form';\nimport Photo from './Photo';\nimport apiKey from './config';\n\n// Creating App and creating constructors\nexport default class App extends Component {\n  constructor() {\n    super();\n    //Creating arrays for photos\n    this.state = {\n      photos: [],\n      Puppies:[],\n      Kittens: [],\n      Stars: [],\n      tag: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    //When components are mounter, app will perform search\n    this.SearchPhotos();\n    this.SearchPhotos('Puppies');\n    this.SearchPhotos('Kittens');\n    this.SearchPhotos('Stars');\n    \n  }\n\n  //Searching function using axios\n  SearchPhotos = query => {\n    this.setState({\n      // Showing loading message to user\n      loading: true\n    });\n    // Fethching data\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => {\n        // if query is one of the themes app will show pre-loaded images\n        if ( query === 'Kittens' || query === 'Stars' || query === 'Puppies') {\n          this.setState({\n            [query]: response.data.photos.photo,\n            loading: false\n          });\n        } else if (query !== undefined) {\n          // If we are searching for some thing, else we will get photos from API\n          this.setState({\n            photos: response.data.photos.photo,\n            tag: query,\n            loading: false\n          });\n        }\n      })\n      // Catching errors in console\n      .catch(error => {\n        console.log('Oh, no, an error have occured!');\n      })\n  }\n  render() {\n    // Renderingresults\n    return (\n      // BrowserRouter will fix problems which accures with GitHub pages\n      <HashRouter basename=\"/photo-search\">\n        <div className=\"container\">\n        <div>\n      <Form onSearch={this.SearchPhotos} />\n      <nav className=\"main-nav\">\n      <ul>\n      {/* Showing categories */}\n        <li><NavLink to='/Puppies'>Puppies</NavLink></li>\n        <li><NavLink to='/Kittens'>Kittens</NavLink></li>\n        <li><NavLink to='/Stars'>Stars</NavLink></li>\n      </ul>\n    </nav>\n    </div>\n    {/* HTML shows \"Loading\" if images are still loading */}\n          {\n          this.state.loading ? <div className=\"loader\"> <h3>Loading...</h3> </div> : \n            <Switch>\n            {/* Switch that gives error 404 if error had occured */}\n            {/* Also handling routes */}\n              <Route exact path=\"/\"/>\n              <Route exact path=\"/search/:tag\" render={() => <Photo data={this.state.photos} searchForm={this.state.tag} />} />\n              <Route exact path=\"/Kittens\" render={() => <Photo data={this.state.Kittens} searchForm=\"Kittens\" />} />\n              <Route exact path=\"/Stars\" render={() => <Photo data={this.state.Stars} searchForm=\"Stars\" />} />\n              <Route exact path=\"/Puppies\" render={() => <Photo data={this.state.Puppies} searchForm=\"Puppies\" />} />\n              <Route render={() => <div className=\"not-found\"> <h3>Error 404</h3></div>} />\n            </Switch>\n          }\n        </div>\n      </HashRouter>\n    );\n\n  }\n}\n\n","const apiKey = '5f045e3050cd1ea0832a18a703bb3d78';\nexport default apiKey;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}